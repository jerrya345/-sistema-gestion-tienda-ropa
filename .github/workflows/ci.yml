name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: TiendaRopa
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
    
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 -uroot -proot --silent; do
          sleep 1
        done
    
    - name: Setup database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -proot TiendaRopa < boutiqueavilescruz.sql
        node crear-stored-procedures.js
    
    - name: Run tests
      run: |
        cd backend
        npm test || echo "No tests configured yet"
    
    - name: Lint code
      run: |
        npm run lint || echo "No linting configured yet"
    
    - name: Check code formatting
      run: |
        npm run format:check || echo "No formatting check configured yet"

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
    
    - name: Security audit
      run: |
        npm audit --audit-level moderate
        cd backend && npm audit --audit-level moderate

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd backend && npm install
    
    - name: Build project
      run: |
        echo "Build completed successfully"
        # Add build steps here when needed
    
    - name: Create release
      if: github.event_name == 'push'
      run: |
        echo "Release created for version ${{ github.sha }}" 